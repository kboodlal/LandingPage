# This file is a template, and might need editing before it works on your project.
image: spork.spawar.navy.mil/bblaine/csa-tools-image/csa-tools-image:latest

cache:
  paths:
    - node_modules

stages:
  - build  # dummy stage to follow the template guidelines
  - test
  - deploy  # dummy stage to follow the template guidelines
  - review
  - staging
  - production
  - cleanup

variables:
  OPENSHIFT_SERVER: ocp.csa.spawar.navy.mil
  # OPENSHIFT_DOMAIN: apps.example.com
  # Configure this variable in Secure Variables:
  OPENSHIFT_TOKEN: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJsYW5kaW5ncGFnZS00NTg0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlcGxveWVyLXRva2VuLTRkemJ3Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRlcGxveWVyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNmQ3ZmNkYTgtYzZlNi0xMWVhLTkwMjctMGExN2U0MTI0ZmNjIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmxhbmRpbmdwYWdlLTQ1ODQ6ZGVwbG95ZXIifQ.nCcf67_PGxL1-L_jcR7aDC3iaXE7qrXkyaR1MQtzAg6nZ65tejV31sGe99rFDr9hy0uPRp1ZJHMYNrYJihMiDYGQ6E4TvGuekMx9phbNYFWtKgvxJp6KeuK2OO0moPRD5sSFguxGVzRdHg44I93GblrmQ63aW5geBDq2ES_k_4R57VY2GQtTLgPL9tVo1PTunNOpHQ_tPtHvgNIRSXsZ5AdD0m_mSLZsj8NWagSrHXxrDL6OnYIes52cHwXSmlN78oD-s1BUOyVJofO5RmJyVkZRrfQkgdPmv0z2LWhIxDwic6uB2ROaQJFRAQsWgCDmYIDRg60EBmPUmywd2fevxg
  
compile:
  image: node:current
  stage: build
  before_script: []
  script:
    - npm install
    - npm run build

test:
  image: node:current
  stage: test
  before_script: []
  allow_failure: true
  script:
    - export CI=true
    - npm test

.deploy: &deploy
  image: spork.spawar.navy.mil/bblaine/csa-tools-image/csa-tools-image:latest
  before_script:
    - oc login "$OPENSHIFT_SERVER" --token="$OPENSHIFT_TOKEN" --insecure-skip-tls-verify
    - oc project "$CI_PROJECT_NAME-$CI_PROJECT_ID" 2> /dev/null || oc new-project "$CI_PROJECT_NAME-$CI_PROJECT_ID"
  script:
    - "oc get services $APP 2> /dev/null || oc new-app . --name=$APP --strategy=docker"
    - "oc start-build $APP --from-dir=. --follow || sleep 3s && oc start-build $APP --from-dir=. --follow"
    - "oc get routes $APP 2> /dev/null || oc expose service $APP --hostname=$APP_HOST"

review:
  image: spork.spawar.navy.mil/bblaine/csa-tools-image/csa-tools-image:latest
  <<: *deploy
  stage: review
  variables:
    APP: review-$CI_COMMIT_REF_NAME
    APP_HOST: $CI_PROJECT_NAME-$CI_ENVIRONMENT_SLUG.$OPENSHIFT_DOMAIN
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://$CI_PROJECT_NAME-$CI_ENVIRONMENT_SLUG.$OPENSHIFT_DOMAIN
    on_stop: stop-review
  only:
    - branches
  except:
    - master

stop-review:
  image: spork.spawar.navy.mil/bblaine/csa-tools-image/csa-tools-image:latest
  <<: *deploy
  stage: cleanup
  script:
    - oc delete all -l "app=$APP"
  when: manual
  variables:
    APP: review-$CI_COMMIT_REF_NAME
    GIT_STRATEGY: none
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  only:
    - branches
  except:
    - master

staging:
  image: spork.spawar.navy.mil/bblaine/csa-tools-image/csa-tools-image:latest
  <<: *deploy
  stage: staging
  variables:
    APP: staging
    APP_HOST: $CI_PROJECT_NAME-staging.$OPENSHIFT_DOMAIN
  environment:
    name: staging
    url: http://$CI_PROJECT_NAME-staging.$OPENSHIFT_DOMAIN
  only:
    - master

production:
  image: spork.spawar.navy.mil/bblaine/csa-tools-image/csa-tools-image:latest
  <<: *deploy
  stage: production
  variables:
    APP: production
    APP_HOST: $CI_PROJECT_NAME.$OPENSHIFT_DOMAIN
  when: manual
  environment:
    name: production
    url: http://$CI_PROJECT_NAME.$OPENSHIFT_DOMAIN
  only:
    - master
